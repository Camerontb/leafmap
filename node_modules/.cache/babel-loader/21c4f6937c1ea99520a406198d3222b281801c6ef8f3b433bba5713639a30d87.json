{"ast":null,"code":"var _jsxFileName = \"/Users/cams/React App/project-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDataFromApi = async () => {\n      try {\n        // Dynamic import within the function\n        const fetchData = (await import('./Server/sgAPI')).default;\n        const result = await fetchData();\n        console.log(result); // Log the fetched data\n        setData(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    console.log(fetchDataFromApi); // Log the fetchDataFromApi function itself (if needed)\n\n    fetchDataFromApi();\n  }, []);\n  const defaultCenter = [1.290, 103.851];\n  const defaultZoom = 11;\n  const customIcon = new L.Icon({\n    iconUrl: 'path-to-your-custom-marker-icon.png',\n    // replace with the path to your custom marker icon\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: defaultCenter,\n      zoom: defaultZoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [data.latitude, data.longitude],\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Details: \", data.details]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","App","_s","data","setData","error","setError","fetchDataFromApi","fetchData","default","result","console","log","defaultCenter","defaultZoom","customIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","attribution","position","latitude","longitude","icon","details","_c","$RefreshReg$"],"sources":["/Users/cams/React App/project-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport './App.css';\n\nimport 'leaflet/dist/leaflet.css';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDataFromApi = async () => {\n      try {\n        // Dynamic import within the function\n        const fetchData = (await import('./Server/sgAPI')).default;\n        const result = await fetchData();\n        console.log(result); // Log the fetched data\n        setData(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    console.log(fetchDataFromApi); // Log the fetchDataFromApi function itself (if needed)\n\n    fetchDataFromApi();\n  }, []);\n\n  const defaultCenter = [1.290, 103.851];\n  const defaultZoom = 11;\n\n  const customIcon = new L.Icon({\n    iconUrl: 'path-to-your-custom-marker-icon.png', // replace with the path to your custom marker icon\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32],\n  });\n\n  return (\n    <div className=\"App\">\n      {error && <p>Error: {error.message}</p>}\n      {data && (\n        <MapContainer center={defaultCenter} zoom={defaultZoom}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          />\n          <Marker position={[data.latitude, data.longitude]} icon={customIcon}>\n            <Popup>\n              <div>\n                <p>Details: {data.details}</p>\n              </div>\n            </Popup>\n          </Marker>\n        </MapContainer>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}